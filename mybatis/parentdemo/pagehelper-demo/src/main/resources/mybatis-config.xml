<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="config.properties">
        <!-- 属性 -->
        <!--<property name="username" value="dev_user"/>-->
        <property name="password" value="F2Fa3!33TYyg"/>

        <!-- 启用默认值特性 也可通过value来指定分割符代替：${username:szy} -->
        <property name="org.apache.ibatis.parsing.PropertyParser.enable-default-value" value="true"/>
    </properties>

    <settings>
        <!-- 设置 -->
        <setting name="cacheEnabled" value="true"/>
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="multipleResultSetsEnabled" value="true"/>
        <setting name="useColumnLabel" value="true"/>
        <setting name="useGeneratedKeys" value="false"/>
        <setting name="autoMappingBehavior" value="PARTIAL"/>
        <setting name="autoMappingUnknownColumnBehavior" value="WARNING"/>
        <setting name="defaultExecutorType" value="SIMPLE"/>
        <setting name="defaultStatementTimeout" value="25"/>
        <setting name="defaultFetchSize" value="100"/>
        <setting name="safeRowBoundsEnabled" value="false"/>
        <setting name="mapUnderscoreToCamelCase" value="false"/>
        <setting name="localCacheScope" value="SESSION"/>
        <setting name="jdbcTypeForNull" value="OTHER"/>
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>
        <setting name="logImpl" value="LOG4J"/>
    </settings>

    <typeAliases>
        <!-- 类型别名 -->
        <package name="com.mybatis.pagehelper.demo.bean"/>
        <package name="com.mybatis.pagehelper.demo.mapper"/>
        <package name="com.mybatis.pagehelper.demo.datasource"/>
    </typeAliases>

    <typeHandlers>
        <package name="com.mybatis.pagehelper.demo.handler"/>
    </typeHandlers>

    <!--<objectFactory type="ExampleObjectFactory">-->
        <!--&lt;!&ndash;扩展点 自定义对象工厂 用于创建结果对象&ndash;&gt;-->
        <!--<property name="someProperty" value="100"/>-->
    <!--</objectFactory>-->

    <plugins>
        <!--扩展点 插件 -->
        <!--<plugin interceptor="StatementHandlerQueryPlugin"></plugin>-->
        <!-- com.github.pagehelper为PageHelper类所在包名 -->
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!-- 使用下面的方式配置参数，后面会有所有的参数介绍 -->
            <!--指定分页插件使用哪种方言-->
            <property name="helperDialect" value="mysql"/>
            <!--默认false 该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为 true 时，会将 RowBounds 中的 offset 参数当成 pageNum 使用，可以用页码和页面大小两个参数进行分页-->
            <property name="offsetAsPageNum" value="false"/>
            <!--默认值为false，该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为true时，使用 RowBounds 分页会进行 count 查询-->
            <property name="rowBoundsWithCount" value="false"/>
            <!--默认值为 false，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit = 0 就会查询出全部的结果-->
            <property name="pageSizeZero" value="false"/>
            <!--分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询-->
            <property name="reasonable" value="false"/>
            <!--为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero-->
            <property name="params" value="pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero"/>
            <!--支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页-->
            <property name="supportMethodsArguments" value="false"/>
            <!--默认值为 false。设置为 true 时，允许在运行时根据多数据源自动识别对应方言的分页 （不支持自动选择sqlserver2012，只能使用sqlserver）-->
            <property name="autoRuntimeDialect" value="false"/>
            <!--默认值为 true。当使用运行时动态数据源或没有设置 helperDialect 属性自动获取数据库类型时，会自动获取一个数据库连接， 通过该属性来设置是否关闭获取的这个连接，默认true关闭，设置为 false 后，不会关闭获取的连接，这个参数的设置要根据自己选择的数据源来决定-->
            <property name="closeConn" value="true"/>
            <!--<property name="aggregateFunctions" value=""/>-->
        </plugin>
    </plugins>

    <environments default="dev-druid">
        <!--environment 元素体中包含了事务管理和连接池的配置 可用于实现不同环境数据源 或者 多数据源配置-->

        <environment id="development">
            <transactionManager type="JDBC">
                <property name="info" value="test001"/>
            </transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username:root}"/>
                <property name="password" value="${password}"/>

                <property name="driver.characterEncoding" value="utf-8"/>
                <property name="driver.useUnicode" value="true"/>
                <property name="driver.rewriteBatchedStatements" value="true"/>
                <property name="driver.zeroDateTimeBehavior" value="convertToNull"/>
            </dataSource>
        </environment>

        <environment id="dev-druid">
            <transactionManager type="JDBC">
                <property name="info" value="test001"/>
            </transactionManager>
            <dataSource type="DruidDataSourceFactory">
                <property name="url" value="${druid_url}" />
                <property name="username" value="${username}" />
                <property name="password" value="${password}" />

                <property name="filters" value="stat" />

                <property name="maxActive" value="20" />
                <property name="initialSize" value="1" />
                <property name="maxWait" value="60000" />
                <property name="minIdle" value="1" />

                <property name="timeBetweenEvictionRunsMillis" value="60000" />
                <property name="minEvictableIdleTimeMillis" value="300000" />

                <property name="testWhileIdle" value="true" />
                <property name="testOnBorrow" value="false" />
                <property name="testOnReturn" value="false" />

                <property name="poolPreparedStatements" value="true" />
                <property name="maxOpenPreparedStatements" value="20" />

                <property name="asyncInit" value="true" />
            </dataSource>
        </environment>

    </environments>


    <databaseIdProvider type="DB_VENDOR">
        <!-- 可扩展 数据库厂商标识 也可自定义 I DatabaseIdProvider  -->
        <property name="MySQL" value="mysql"/>
        <property name="SQL Server" value="sqlserver"/>
        <property name="DB2" value="db2"/>
        <property name="Oracle" value="oracle" />
    </databaseIdProvider>


    <mappers>
        <mapper class="com.mybatis.pagehelper.demo.mapper.PersonMapper"/>
        <!-- 将包内的映射器接口实现全部注册为映射器 -->
        <package name="mybatis.mapper"/>
    </mappers>
</configuration>